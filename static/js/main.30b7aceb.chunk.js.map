{"version":3,"sources":["reducers/CartReducer.js","context/CartContext.js","assets/images/dashboardloader3.gif","App.js","serviceWorker.js","index.js"],"names":["state","action","type","cartSavedForLater","payload","myShoppingCart","filter","cartItemId","initialState","JSON","parse","localStorage","getItem","GlobalCartContext","createContext","GlobalCartContextProvider","children","useReducer","CartReducer","dispatch","useEffect","setItem","stringify","Provider","value","addItemTocart","cartItem","removeItemFromCart","saveItemforLater","savedItem","removeItemFromSavedForLater","id","module","exports","Homepage","lazy","Shopping","Cart","Catalog","SearchProducts","PageNotFound","App","fallback","src","loadingIcon","alt","className","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.30b7aceb.chunk.js","sourcesContent":["export default (state, action)=>{\r\n   \r\n    switch(action.type){\r\n        \r\n        case \"SAVE_ITEM_FOR_LATER\":\r\n            return{\r\n                ...state,\r\n                cartSavedForLater:[action.payload, ...state.cartSavedForLater],\r\n            };\r\n        case \"ADD_ITEM_TO_CART\":\r\n            return{\r\n                ...state,\r\n                myShoppingCart:[action.payload, ...state.myShoppingCart],\r\n            };\r\n            case \"REMOVE_ITEM_FROM_CART\":\r\n                return{\r\n                    ...state,\r\n                    myShoppingCart: state.myShoppingCart.filter(\r\n                        (myShoppingCart) => myShoppingCart.cartItemId !== action.payload\r\n                    )\r\n\r\n                };\r\n                case \"REMOVE_FROM_SAVED_FOR_LATER\":\r\n                    return{\r\n                        ...state,\r\n                        cartSavedForLater: state.cartSavedForLater.filter(\r\n                            (cartSavedForLater) => cartSavedForLater.cartItemId !== action.payload\r\n                        )\r\n                        \r\n                    };\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, { createContext, useReducer, useEffect } from \"react\";\r\nimport CartReducer from '../reducers/CartReducer';\r\nconst initialState = {\r\n  myShoppingCart: JSON.parse(localStorage.getItem(\"myShoppingCart\"))||[],\r\n  cartSavedForLater: JSON.parse(localStorage.getItem(\"cartSavedForLater\"))||[]\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport const GlobalCartContext=createContext(initialState);\r\n\r\nexport const GlobalCartContextProvider=({children})=>{\r\n    const [state, dispatch]=useReducer(CartReducer,initialState)\r\n    useEffect(()=>{\r\n      localStorage.setItem(\"myShoppingCart\", JSON.stringify(state.myShoppingCart));\r\n      localStorage.setItem(\"cartSavedForLater\", JSON.stringify(state.cartSavedForLater))\r\n    });\r\n    \r\n\r\n   \r\n\r\n    const saveItemforLater=(savedItem)=>{\r\n      dispatch({\r\n        type: \"SAVE_ITEM_FOR_LATER\",\r\n        payload: savedItem,\r\n      });\r\n    };\r\n    const removeItemFromSavedForLater=(id)=>{\r\n      dispatch({\r\n        type: \"REMOVE_FROM_SAVED_FOR_LATER\",\r\n        payload: id,\r\n      });\r\n    };\r\n    const addItemTocart=(cartItem)=>{\r\n      dispatch({\r\n        type: \"ADD_ITEM_TO_CART\",\r\n        payload: cartItem,\r\n      }\r\n\r\n      );\r\n    };\r\n\r\n    const removeItemFromCart=(cartItemId)=>{\r\n      dispatch({\r\n        type: \"REMOVE_ITEM_FROM_CART\",\r\n        payload: cartItemId,\r\n\r\n      })\r\n    }\r\n    return(\r\n        <GlobalCartContext.Provider value={{\r\n          myShoppingCart: state.myShoppingCart,\r\n            cartSavedForLater:state.cartSavedForLater,\r\n            addItemTocart,\r\n            removeItemFromCart,\r\n            saveItemforLater,\r\n            removeItemFromSavedForLater\r\n        }}>\r\n        {children}\r\n        </GlobalCartContext.Provider>\r\n    );\r\n}\r\n","module.exports = __webpack_public_path__ + \"static/media/dashboardloader3.eef03e4a.gif\";","import React, { Suspense, lazy } from \"react\";\r\nimport \"./styles/App.scss\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { GlobalCartContextProvider } from \"./context/CartContext\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\nimport loadingIcon from \"./assets/images/dashboardloader3.gif\";\r\nconst Homepage = lazy(() => import(\"./Components/Homepage\"));\r\nconst Shopping = lazy(() => import(\"./Components/Shopping\"));\r\nconst Cart = lazy(() => import(\"./Components/Cart/Cart\"));\r\nconst Catalog = lazy(() => import(\"./Components/Catalog\"));\r\n\r\nconst SearchProducts = lazy(() => import(\"./Components/SearchProducts\"));\r\nconst PageNotFound = lazy(() => import(\"./Components/PageNotFound\"));\r\n\r\nfunction App() {\r\n  return (\r\n    <GlobalCartContextProvider>\r\n      <ToastProvider>\r\n        <Router>\r\n          <Suspense\r\n            fallback={\r\n              <img src={loadingIcon} alt=\"loading\" className=\"loadingIcon\" />\r\n            }\r\n          >\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Homepage} />\r\n              <Route exact path=\"/shop\" component={Shopping} />\r\n              <Route exact path=\"/search\" component={SearchProducts} />\r\n              <Route exact path=\"/cart\" component={Cart} />\r\n              <Route exact path=\"/trend/:collectionname\" component={Shopping} />\r\n              <Route exact path=\"/collections\" component={Shopping} />\r\n              <Route\r\n                exact\r\n                path=\"/collections/:collectionname\"\r\n                component={Shopping}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/catalog/item/:id/:productname/:action\"\r\n                component={Catalog}\r\n              />\r\n\r\n              <Route component={PageNotFound} />\r\n            </Switch>\r\n          </Suspense>\r\n        </Router>\r\n      </ToastProvider>\r\n    </GlobalCartContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}